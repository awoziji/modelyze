/*
Modeling Kernel Language (Modelyze) library 
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
  Name:  Bouncing Ball Higher-Order
  Cases: - Tests a self transition and the simplest possible hybrid model.
         - Compared to "test-bouncing-ball.mkl", this case also
           tests the use of higher-order derivatives (y'') without
           declaring an explict variable yp.
         - Tests that Init statements are using derivatives, i.e., y'
*/

include MechsysBasics
include HybridSimulation
include ExportModelica
include HybridModeling


let BouncingBall height:Real -> Equations =
  let g = 9.81 in
  let y:Position in
  let Bounce:State in
  
  init y height;
  statechart initstate Bounce begin
    state Bounce begin            
      -g = y'';

      transition Bounce when (y <= 0.)
        action (y' <- y' * -0.7)
    end
  end;

  probe "y" = y




let _ = 
  printsim (BouncingBall 5.0) 0.01 6.

