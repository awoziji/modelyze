/*
Modeling Kernel Language (Modelyze) library 
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.
*/

include ModelyzeDAE

def SimpleDAE(initval:Real, c:Real) = {
    def x:Real;
    init x initval;
    der(x) = c * x;
    probe("x") = x;
}

def SimpleDAE2() = {
    def y:Real;
    init y 1.;
    der(y) = -1. * y;
    probe("x") = y;
}

include ModelyzeMA


def SimpleDAEActor(name:String, initval:Real, c:Real) = {
  Comp(name,SimpleDAE(initval,c),[],[],daeInit,daeDoStep,daeGet,daeSet);    
}


def Foo(name:String) = {
  Comp(name,SimpleDAE2(),[],[],daeInit,daeDoStep,daeGet,daeSet);    
}



def MainModel() = {
    SimpleDAEActor("DAE1",0.5,-1.0);
    SimpleDAEActor("DAE2",0.8,1.0);
    Foo("Foo");
}

def main = printsim(MainModel(),0.1, 5.0)










