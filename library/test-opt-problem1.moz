/*
Modeling Kernel Language (MKL) library 
Copyright (C) 2010-2011 David Broman 

MKL library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

MKL library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with MKL library.  If not, see <http://www.gnu.org/licenses/>.
*/



include Optimization

//def VanDerPol() : OptProblem = 
def VanDerPol() = 
{
    // Define variables
    def x1,x2,u:Signal;

    // Dynamic optimization problem
    minimize integral (x1*x1 + x2*x2 + u*u) interval 0 5 
    {    
        // State that u is an input
        input u;

        // Initial values for x1 and x2
        init x1 0;
        init x2 1; 

        // Differential equations
        x1' = (1 - x2*x2)*x1 - x2 + u;
        x2' = x1
    }
}

def main = {
    def code = codeGenOptProblem(VanDerPol(),50);
    print(code)
}




