/*
Modeling Kernel Language (Modelyze) library 
Copyright (C) 2010-2012 David Broman

Modelyze library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

Modelyze library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with Modelyze library.  If not, see <http://www.gnu.org/licenses/>.
*/

include Electrical
include Mechanical

def ShaftElement(flangeA:Rotational,flangeB:Rotational) -> Equations = {
  def r1:Rotational;
  Spring(8., flangeA, r1);
  Damper(1.5, flangeA, r1);
  Inertia(0.5, r1, flangeB);
}

def DCMotor(flange:Rotational) -> Equations = {
  def e1:Electrical;
  def e2:Electrical;
  def e3:Electrical;
  def e4:Electrical;
  ConstantVoltage(60.,e1,e4);
  Resistor(100.,e1,e2);
  Inductor(0.2,e2,e3);
  EMF(1.,e3,e4,flange);
  Ground(e4);
}

def FlexibleShaft(n:Int, flangeA:Rotational, flangeB:Rotational) -> Equations = {
  if n == 1 then 
    ShaftElement(flangeA,flangeB)
  else {
    def r1:Rotational;
    ShaftElement(flangeA,r1);
    FlexibleShaft(n-1, r1, flangeB);
  }
}





  

