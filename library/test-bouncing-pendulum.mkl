/*
Modeling Kernel Language (MKL) library 
Copyright (C) 2010 David Broman

MKL library is free software: you can redistribute it and/or modify
it under the terms of the GNU Lesser General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

MKL library is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU Lesser General Public License for more details.

You should have received a copy of the GNU Lesser General Public License
along with MKL library.  If not, see <http://www.gnu.org/licenses/>.
*/

/**
  Name:  Bouncing Pendulum
  Cases: - Tests transistion between two states.
         - Tests the use of higher-order derivatives.
*/

include MechsysBasics
include HybridSimulation
include ExportModelica
include HybridModeling

// Work in progress. Still not working correct.
let BouncingPendulum m:Real -> l:Real -> startAngle:Real -> Equations =
  let g = 9.81 in
  let x:Position in
  let y:Position in

  let Pendulum:State in
  let BouncingBall:State in

  statechart initstate Pendulum begin
    state Pendulum begin
      let T:Force in

      init x (l*sin startAngle);
      init y (-l*cos startAngle);
     
      -T*x/l = m*x'';
      -T*y/l - m*g = m*y'';     
      (x^2. + y^2.)'' = (l^2.)'';
    
      probe "T" = T;

      transition BouncingBall when (time > 2.) 
        action nothing
//     transition BouncingBall (T > 70.) nothing;    // Tension 70 does not work
//    transition BouncingBall (time > 0.5) nothing;  // Seems to be same problem with time > 0.5
    end;

    state BouncingBall begin    
      x'' = 0.;
      -m*g = m*y'';

      transition BouncingBall when (y <= -4.) 
        action (y' <-  y' * -0.7)
    end

  end;

  probe "y" = y



let main = 
  let angle = 45.*3.14/180. in
  printsim (BouncingPendulum 5.0 2.0 angle) 0.01 5.












