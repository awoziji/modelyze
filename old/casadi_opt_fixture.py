import casadi as C
import numpy as N
import matplotlib.pyplot as plt

z = []
u_1_1 = C.SX("u_1_1")
z.append(u_1_1)
x_1_2 = C.SX("x_1_2")
z.append(x_1_2)
x_1_1 = C.SX("x_1_1")
z.append(x_1_1)
u_2_1 = C.SX("u_2_1")
z.append(u_2_1)
x_2_2 = C.SX("x_2_2")
z.append(x_2_2)
x_2_1 = C.SX("x_2_1")
z.append(x_2_1)
u_3_1 = C.SX("u_3_1")
z.append(u_3_1)
x_3_2 = C.SX("x_3_2")
z.append(x_3_2)
x_3_1 = C.SX("x_3_1")
z.append(x_3_1)
u_4_1 = C.SX("u_4_1")
z.append(u_4_1)
x_4_2 = C.SX("x_4_2")
z.append(x_4_2)
x_4_1 = C.SX("x_4_1")
z.append(x_4_1)
u_5_1 = C.SX("u_5_1")
z.append(u_5_1)
x_5_2 = C.SX("x_5_2")
z.append(x_5_2)
x_5_1 = C.SX("x_5_1")
z.append(x_5_1)
u_6_1 = C.SX("u_6_1")
z.append(u_6_1)
x_6_2 = C.SX("x_6_2")
z.append(x_6_2)
x_6_1 = C.SX("x_6_1")
z.append(x_6_1)
u_7_1 = C.SX("u_7_1")
z.append(u_7_1)
x_7_2 = C.SX("x_7_2")
z.append(x_7_2)
x_7_1 = C.SX("x_7_1")
z.append(x_7_1)
u_8_1 = C.SX("u_8_1")
z.append(u_8_1)
x_8_2 = C.SX("x_8_2")
z.append(x_8_2)
x_8_1 = C.SX("x_8_1")
z.append(x_8_1)
u_9_1 = C.SX("u_9_1")
z.append(u_9_1)
x_9_2 = C.SX("x_9_2")
z.append(x_9_2)
x_9_1 = C.SX("x_9_1")
z.append(x_9_1)
u_10_1 = C.SX("u_10_1")
z.append(u_10_1)
x_10_2 = C.SX("x_10_2")
z.append(x_10_2)
x_10_1 = C.SX("x_10_1")
z.append(x_10_1)
u_11_1 = C.SX("u_11_1")
z.append(u_11_1)
x_11_2 = C.SX("x_11_2")
z.append(x_11_2)
x_11_1 = C.SX("x_11_1")
z.append(x_11_1)
u_12_1 = C.SX("u_12_1")
z.append(u_12_1)
x_12_2 = C.SX("x_12_2")
z.append(x_12_2)
x_12_1 = C.SX("x_12_1")
z.append(x_12_1)
u_13_1 = C.SX("u_13_1")
z.append(u_13_1)
x_13_2 = C.SX("x_13_2")
z.append(x_13_2)
x_13_1 = C.SX("x_13_1")
z.append(x_13_1)
u_14_1 = C.SX("u_14_1")
z.append(u_14_1)
x_14_2 = C.SX("x_14_2")
z.append(x_14_2)
x_14_1 = C.SX("x_14_1")
z.append(x_14_1)
u_15_1 = C.SX("u_15_1")
z.append(u_15_1)
x_15_2 = C.SX("x_15_2")
z.append(x_15_2)
x_15_1 = C.SX("x_15_1")
z.append(x_15_1)
u_16_1 = C.SX("u_16_1")
z.append(u_16_1)
x_16_2 = C.SX("x_16_2")
z.append(x_16_2)
x_16_1 = C.SX("x_16_1")
z.append(x_16_1)
u_17_1 = C.SX("u_17_1")
z.append(u_17_1)
x_17_2 = C.SX("x_17_2")
z.append(x_17_2)
x_17_1 = C.SX("x_17_1")
z.append(x_17_1)
u_18_1 = C.SX("u_18_1")
z.append(u_18_1)
x_18_2 = C.SX("x_18_2")
z.append(x_18_2)
x_18_1 = C.SX("x_18_1")
z.append(x_18_1)
u_19_1 = C.SX("u_19_1")
z.append(u_19_1)
x_19_2 = C.SX("x_19_2")
z.append(x_19_2)
x_19_1 = C.SX("x_19_1")
z.append(x_19_1)
u_20_1 = C.SX("u_20_1")
z.append(u_20_1)
x_20_2 = C.SX("x_20_2")
z.append(x_20_2)
x_20_1 = C.SX("x_20_1")
z.append(x_20_1)
u_21_1 = C.SX("u_21_1")
z.append(u_21_1)
x_21_2 = C.SX("x_21_2")
z.append(x_21_2)
x_21_1 = C.SX("x_21_1")
z.append(x_21_1)
u_22_1 = C.SX("u_22_1")
z.append(u_22_1)
x_22_2 = C.SX("x_22_2")
z.append(x_22_2)
x_22_1 = C.SX("x_22_1")
z.append(x_22_1)
u_23_1 = C.SX("u_23_1")
z.append(u_23_1)
x_23_2 = C.SX("x_23_2")
z.append(x_23_2)
x_23_1 = C.SX("x_23_1")
z.append(x_23_1)
u_24_1 = C.SX("u_24_1")
z.append(u_24_1)
x_24_2 = C.SX("x_24_2")
z.append(x_24_2)
x_24_1 = C.SX("x_24_1")
z.append(x_24_1)
u_25_1 = C.SX("u_25_1")
z.append(u_25_1)
x_25_2 = C.SX("x_25_2")
z.append(x_25_2)
x_25_1 = C.SX("x_25_1")
z.append(x_25_1)
u_26_1 = C.SX("u_26_1")
z.append(u_26_1)
x_26_2 = C.SX("x_26_2")
z.append(x_26_2)
x_26_1 = C.SX("x_26_1")
z.append(x_26_1)
u_27_1 = C.SX("u_27_1")
z.append(u_27_1)
x_27_2 = C.SX("x_27_2")
z.append(x_27_2)
x_27_1 = C.SX("x_27_1")
z.append(x_27_1)
u_28_1 = C.SX("u_28_1")
z.append(u_28_1)
x_28_2 = C.SX("x_28_2")
z.append(x_28_2)
x_28_1 = C.SX("x_28_1")
z.append(x_28_1)
u_29_1 = C.SX("u_29_1")
z.append(u_29_1)
x_29_2 = C.SX("x_29_2")
z.append(x_29_2)
x_29_1 = C.SX("x_29_1")
z.append(x_29_1)
u_30_1 = C.SX("u_30_1")
z.append(u_30_1)
x_30_2 = C.SX("x_30_2")
z.append(x_30_2)
x_30_1 = C.SX("x_30_1")
z.append(x_30_1)
u_31_1 = C.SX("u_31_1")
z.append(u_31_1)
x_31_2 = C.SX("x_31_2")
z.append(x_31_2)
x_31_1 = C.SX("x_31_1")
z.append(x_31_1)
u_32_1 = C.SX("u_32_1")
z.append(u_32_1)
x_32_2 = C.SX("x_32_2")
z.append(x_32_2)
x_32_1 = C.SX("x_32_1")
z.append(x_32_1)
u_33_1 = C.SX("u_33_1")
z.append(u_33_1)
x_33_2 = C.SX("x_33_2")
z.append(x_33_2)
x_33_1 = C.SX("x_33_1")
z.append(x_33_1)
u_34_1 = C.SX("u_34_1")
z.append(u_34_1)
x_34_2 = C.SX("x_34_2")
z.append(x_34_2)
x_34_1 = C.SX("x_34_1")
z.append(x_34_1)
u_35_1 = C.SX("u_35_1")
z.append(u_35_1)
x_35_2 = C.SX("x_35_2")
z.append(x_35_2)
x_35_1 = C.SX("x_35_1")
z.append(x_35_1)
u_36_1 = C.SX("u_36_1")
z.append(u_36_1)
x_36_2 = C.SX("x_36_2")
z.append(x_36_2)
x_36_1 = C.SX("x_36_1")
z.append(x_36_1)
u_37_1 = C.SX("u_37_1")
z.append(u_37_1)
x_37_2 = C.SX("x_37_2")
z.append(x_37_2)
x_37_1 = C.SX("x_37_1")
z.append(x_37_1)
u_38_1 = C.SX("u_38_1")
z.append(u_38_1)
x_38_2 = C.SX("x_38_2")
z.append(x_38_2)
x_38_1 = C.SX("x_38_1")
z.append(x_38_1)
u_39_1 = C.SX("u_39_1")
z.append(u_39_1)
x_39_2 = C.SX("x_39_2")
z.append(x_39_2)
x_39_1 = C.SX("x_39_1")
z.append(x_39_1)
u_40_1 = C.SX("u_40_1")
z.append(u_40_1)
x_40_2 = C.SX("x_40_2")
z.append(x_40_2)
x_40_1 = C.SX("x_40_1")
z.append(x_40_1)
u_41_1 = C.SX("u_41_1")
z.append(u_41_1)
x_41_2 = C.SX("x_41_2")
z.append(x_41_2)
x_41_1 = C.SX("x_41_1")
z.append(x_41_1)
u_42_1 = C.SX("u_42_1")
z.append(u_42_1)
x_42_2 = C.SX("x_42_2")
z.append(x_42_2)
x_42_1 = C.SX("x_42_1")
z.append(x_42_1)
u_43_1 = C.SX("u_43_1")
z.append(u_43_1)
x_43_2 = C.SX("x_43_2")
z.append(x_43_2)
x_43_1 = C.SX("x_43_1")
z.append(x_43_1)
u_44_1 = C.SX("u_44_1")
z.append(u_44_1)
x_44_2 = C.SX("x_44_2")
z.append(x_44_2)
x_44_1 = C.SX("x_44_1")
z.append(x_44_1)
u_45_1 = C.SX("u_45_1")
z.append(u_45_1)
x_45_2 = C.SX("x_45_2")
z.append(x_45_2)
x_45_1 = C.SX("x_45_1")
z.append(x_45_1)
u_46_1 = C.SX("u_46_1")
z.append(u_46_1)
x_46_2 = C.SX("x_46_2")
z.append(x_46_2)
x_46_1 = C.SX("x_46_1")
z.append(x_46_1)
u_47_1 = C.SX("u_47_1")
z.append(u_47_1)
x_47_2 = C.SX("x_47_2")
z.append(x_47_2)
x_47_1 = C.SX("x_47_1")
z.append(x_47_1)
u_48_1 = C.SX("u_48_1")
z.append(u_48_1)
x_48_2 = C.SX("x_48_2")
z.append(x_48_2)
x_48_1 = C.SX("x_48_1")
z.append(x_48_1)
u_49_1 = C.SX("u_49_1")
z.append(u_49_1)
x_49_2 = C.SX("x_49_2")
z.append(x_49_2)
x_49_1 = C.SX("x_49_1")
z.append(x_49_1)
u_50_1 = C.SX("u_50_1")
z.append(u_50_1)
x_50_2 = C.SX("x_50_2")
z.append(x_50_2)
x_50_1 = C.SX("x_50_1")
z.append(x_50_1)
constr = []
constr.append(((x_1_1 - 0.) / 0.1) - ((((1. - x_1_2 * x_1_2) * x_1_1 - x_1_2) + u_1_1)))
constr.append(((x_1_2 - 1.) / 0.1) - (x_1_1))
constr.append(((x_2_1 - x_1_1) / 0.1) - ((((1. - x_2_2 * x_2_2) * x_2_1 - x_2_2) + u_2_1)))
constr.append(((x_2_2 - x_1_2) / 0.1) - (x_2_1))
constr.append(((x_3_1 - x_2_1) / 0.1) - ((((1. - x_3_2 * x_3_2) * x_3_1 - x_3_2) + u_3_1)))
constr.append(((x_3_2 - x_2_2) / 0.1) - (x_3_1))
constr.append(((x_4_1 - x_3_1) / 0.1) - ((((1. - x_4_2 * x_4_2) * x_4_1 - x_4_2) + u_4_1)))
constr.append(((x_4_2 - x_3_2) / 0.1) - (x_4_1))
constr.append(((x_5_1 - x_4_1) / 0.1) - ((((1. - x_5_2 * x_5_2) * x_5_1 - x_5_2) + u_5_1)))
constr.append(((x_5_2 - x_4_2) / 0.1) - (x_5_1))
constr.append(((x_6_1 - x_5_1) / 0.1) - ((((1. - x_6_2 * x_6_2) * x_6_1 - x_6_2) + u_6_1)))
constr.append(((x_6_2 - x_5_2) / 0.1) - (x_6_1))
constr.append(((x_7_1 - x_6_1) / 0.1) - ((((1. - x_7_2 * x_7_2) * x_7_1 - x_7_2) + u_7_1)))
constr.append(((x_7_2 - x_6_2) / 0.1) - (x_7_1))
constr.append(((x_8_1 - x_7_1) / 0.1) - ((((1. - x_8_2 * x_8_2) * x_8_1 - x_8_2) + u_8_1)))
constr.append(((x_8_2 - x_7_2) / 0.1) - (x_8_1))
constr.append(((x_9_1 - x_8_1) / 0.1) - ((((1. - x_9_2 * x_9_2) * x_9_1 - x_9_2) + u_9_1)))
constr.append(((x_9_2 - x_8_2) / 0.1) - (x_9_1))
constr.append(((x_10_1 - x_9_1) / 0.1) - ((((1. - x_10_2 * x_10_2) * x_10_1 - x_10_2) + u_10_1)))
constr.append(((x_10_2 - x_9_2) / 0.1) - (x_10_1))
constr.append(((x_11_1 - x_10_1) / 0.1) - ((((1. - x_11_2 * x_11_2) * x_11_1 - x_11_2) + u_11_1)))
constr.append(((x_11_2 - x_10_2) / 0.1) - (x_11_1))
constr.append(((x_12_1 - x_11_1) / 0.1) - ((((1. - x_12_2 * x_12_2) * x_12_1 - x_12_2) + u_12_1)))
constr.append(((x_12_2 - x_11_2) / 0.1) - (x_12_1))
constr.append(((x_13_1 - x_12_1) / 0.1) - ((((1. - x_13_2 * x_13_2) * x_13_1 - x_13_2) + u_13_1)))
constr.append(((x_13_2 - x_12_2) / 0.1) - (x_13_1))
constr.append(((x_14_1 - x_13_1) / 0.1) - ((((1. - x_14_2 * x_14_2) * x_14_1 - x_14_2) + u_14_1)))
constr.append(((x_14_2 - x_13_2) / 0.1) - (x_14_1))
constr.append(((x_15_1 - x_14_1) / 0.1) - ((((1. - x_15_2 * x_15_2) * x_15_1 - x_15_2) + u_15_1)))
constr.append(((x_15_2 - x_14_2) / 0.1) - (x_15_1))
constr.append(((x_16_1 - x_15_1) / 0.1) - ((((1. - x_16_2 * x_16_2) * x_16_1 - x_16_2) + u_16_1)))
constr.append(((x_16_2 - x_15_2) / 0.1) - (x_16_1))
constr.append(((x_17_1 - x_16_1) / 0.1) - ((((1. - x_17_2 * x_17_2) * x_17_1 - x_17_2) + u_17_1)))
constr.append(((x_17_2 - x_16_2) / 0.1) - (x_17_1))
constr.append(((x_18_1 - x_17_1) / 0.1) - ((((1. - x_18_2 * x_18_2) * x_18_1 - x_18_2) + u_18_1)))
constr.append(((x_18_2 - x_17_2) / 0.1) - (x_18_1))
constr.append(((x_19_1 - x_18_1) / 0.1) - ((((1. - x_19_2 * x_19_2) * x_19_1 - x_19_2) + u_19_1)))
constr.append(((x_19_2 - x_18_2) / 0.1) - (x_19_1))
constr.append(((x_20_1 - x_19_1) / 0.1) - ((((1. - x_20_2 * x_20_2) * x_20_1 - x_20_2) + u_20_1)))
constr.append(((x_20_2 - x_19_2) / 0.1) - (x_20_1))
constr.append(((x_21_1 - x_20_1) / 0.1) - ((((1. - x_21_2 * x_21_2) * x_21_1 - x_21_2) + u_21_1)))
constr.append(((x_21_2 - x_20_2) / 0.1) - (x_21_1))
constr.append(((x_22_1 - x_21_1) / 0.1) - ((((1. - x_22_2 * x_22_2) * x_22_1 - x_22_2) + u_22_1)))
constr.append(((x_22_2 - x_21_2) / 0.1) - (x_22_1))
constr.append(((x_23_1 - x_22_1) / 0.1) - ((((1. - x_23_2 * x_23_2) * x_23_1 - x_23_2) + u_23_1)))
constr.append(((x_23_2 - x_22_2) / 0.1) - (x_23_1))
constr.append(((x_24_1 - x_23_1) / 0.1) - ((((1. - x_24_2 * x_24_2) * x_24_1 - x_24_2) + u_24_1)))
constr.append(((x_24_2 - x_23_2) / 0.1) - (x_24_1))
constr.append(((x_25_1 - x_24_1) / 0.1) - ((((1. - x_25_2 * x_25_2) * x_25_1 - x_25_2) + u_25_1)))
constr.append(((x_25_2 - x_24_2) / 0.1) - (x_25_1))
constr.append(((x_26_1 - x_25_1) / 0.1) - ((((1. - x_26_2 * x_26_2) * x_26_1 - x_26_2) + u_26_1)))
constr.append(((x_26_2 - x_25_2) / 0.1) - (x_26_1))
constr.append(((x_27_1 - x_26_1) / 0.1) - ((((1. - x_27_2 * x_27_2) * x_27_1 - x_27_2) + u_27_1)))
constr.append(((x_27_2 - x_26_2) / 0.1) - (x_27_1))
constr.append(((x_28_1 - x_27_1) / 0.1) - ((((1. - x_28_2 * x_28_2) * x_28_1 - x_28_2) + u_28_1)))
constr.append(((x_28_2 - x_27_2) / 0.1) - (x_28_1))
constr.append(((x_29_1 - x_28_1) / 0.1) - ((((1. - x_29_2 * x_29_2) * x_29_1 - x_29_2) + u_29_1)))
constr.append(((x_29_2 - x_28_2) / 0.1) - (x_29_1))
constr.append(((x_30_1 - x_29_1) / 0.1) - ((((1. - x_30_2 * x_30_2) * x_30_1 - x_30_2) + u_30_1)))
constr.append(((x_30_2 - x_29_2) / 0.1) - (x_30_1))
constr.append(((x_31_1 - x_30_1) / 0.1) - ((((1. - x_31_2 * x_31_2) * x_31_1 - x_31_2) + u_31_1)))
constr.append(((x_31_2 - x_30_2) / 0.1) - (x_31_1))
constr.append(((x_32_1 - x_31_1) / 0.1) - ((((1. - x_32_2 * x_32_2) * x_32_1 - x_32_2) + u_32_1)))
constr.append(((x_32_2 - x_31_2) / 0.1) - (x_32_1))
constr.append(((x_33_1 - x_32_1) / 0.1) - ((((1. - x_33_2 * x_33_2) * x_33_1 - x_33_2) + u_33_1)))
constr.append(((x_33_2 - x_32_2) / 0.1) - (x_33_1))
constr.append(((x_34_1 - x_33_1) / 0.1) - ((((1. - x_34_2 * x_34_2) * x_34_1 - x_34_2) + u_34_1)))
constr.append(((x_34_2 - x_33_2) / 0.1) - (x_34_1))
constr.append(((x_35_1 - x_34_1) / 0.1) - ((((1. - x_35_2 * x_35_2) * x_35_1 - x_35_2) + u_35_1)))
constr.append(((x_35_2 - x_34_2) / 0.1) - (x_35_1))
constr.append(((x_36_1 - x_35_1) / 0.1) - ((((1. - x_36_2 * x_36_2) * x_36_1 - x_36_2) + u_36_1)))
constr.append(((x_36_2 - x_35_2) / 0.1) - (x_36_1))
constr.append(((x_37_1 - x_36_1) / 0.1) - ((((1. - x_37_2 * x_37_2) * x_37_1 - x_37_2) + u_37_1)))
constr.append(((x_37_2 - x_36_2) / 0.1) - (x_37_1))
constr.append(((x_38_1 - x_37_1) / 0.1) - ((((1. - x_38_2 * x_38_2) * x_38_1 - x_38_2) + u_38_1)))
constr.append(((x_38_2 - x_37_2) / 0.1) - (x_38_1))
constr.append(((x_39_1 - x_38_1) / 0.1) - ((((1. - x_39_2 * x_39_2) * x_39_1 - x_39_2) + u_39_1)))
constr.append(((x_39_2 - x_38_2) / 0.1) - (x_39_1))
constr.append(((x_40_1 - x_39_1) / 0.1) - ((((1. - x_40_2 * x_40_2) * x_40_1 - x_40_2) + u_40_1)))
constr.append(((x_40_2 - x_39_2) / 0.1) - (x_40_1))
constr.append(((x_41_1 - x_40_1) / 0.1) - ((((1. - x_41_2 * x_41_2) * x_41_1 - x_41_2) + u_41_1)))
constr.append(((x_41_2 - x_40_2) / 0.1) - (x_41_1))
constr.append(((x_42_1 - x_41_1) / 0.1) - ((((1. - x_42_2 * x_42_2) * x_42_1 - x_42_2) + u_42_1)))
constr.append(((x_42_2 - x_41_2) / 0.1) - (x_42_1))
constr.append(((x_43_1 - x_42_1) / 0.1) - ((((1. - x_43_2 * x_43_2) * x_43_1 - x_43_2) + u_43_1)))
constr.append(((x_43_2 - x_42_2) / 0.1) - (x_43_1))
constr.append(((x_44_1 - x_43_1) / 0.1) - ((((1. - x_44_2 * x_44_2) * x_44_1 - x_44_2) + u_44_1)))
constr.append(((x_44_2 - x_43_2) / 0.1) - (x_44_1))
constr.append(((x_45_1 - x_44_1) / 0.1) - ((((1. - x_45_2 * x_45_2) * x_45_1 - x_45_2) + u_45_1)))
constr.append(((x_45_2 - x_44_2) / 0.1) - (x_45_1))
constr.append(((x_46_1 - x_45_1) / 0.1) - ((((1. - x_46_2 * x_46_2) * x_46_1 - x_46_2) + u_46_1)))
constr.append(((x_46_2 - x_45_2) / 0.1) - (x_46_1))
constr.append(((x_47_1 - x_46_1) / 0.1) - ((((1. - x_47_2 * x_47_2) * x_47_1 - x_47_2) + u_47_1)))
constr.append(((x_47_2 - x_46_2) / 0.1) - (x_47_1))
constr.append(((x_48_1 - x_47_1) / 0.1) - ((((1. - x_48_2 * x_48_2) * x_48_1 - x_48_2) + u_48_1)))
constr.append(((x_48_2 - x_47_2) / 0.1) - (x_48_1))
constr.append(((x_49_1 - x_48_1) / 0.1) - ((((1. - x_49_2 * x_49_2) * x_49_1 - x_49_2) + u_49_1)))
constr.append(((x_49_2 - x_48_2) / 0.1) - (x_49_1))
constr.append(((x_50_1 - x_49_1) / 0.1) - ((((1. - x_50_2 * x_50_2) * x_50_1 - x_50_2) + u_50_1)))
constr.append(((x_50_2 - x_49_2) / 0.1) - (x_50_1))
cost = ((((((((((((((((((((((((((((((((((((((((((((((((((0. + ((x_1_1 * x_1_1 + x_1_2 * x_1_2) + u_1_1 * u_1_1) * 0.1) + ((x_2_1 * x_2_1 + x_2_2 * x_2_2) + u_2_1 * u_2_1) * 0.1) + ((x_3_1 * x_3_1 + x_3_2 * x_3_2) + u_3_1 * u_3_1) * 0.1) + ((x_4_1 * x_4_1 + x_4_2 * x_4_2) + u_4_1 * u_4_1) * 0.1) + ((x_5_1 * x_5_1 + x_5_2 * x_5_2) + u_5_1 * u_5_1) * 0.1) + ((x_6_1 * x_6_1 + x_6_2 * x_6_2) + u_6_1 * u_6_1) * 0.1) + ((x_7_1 * x_7_1 + x_7_2 * x_7_2) + u_7_1 * u_7_1) * 0.1) + ((x_8_1 * x_8_1 + x_8_2 * x_8_2) + u_8_1 * u_8_1) * 0.1) + ((x_9_1 * x_9_1 + x_9_2 * x_9_2) + u_9_1 * u_9_1) * 0.1) + ((x_10_1 * x_10_1 + x_10_2 * x_10_2) + u_10_1 * u_10_1) * 0.1) + ((x_11_1 * x_11_1 + x_11_2 * x_11_2) + u_11_1 * u_11_1) * 0.1) + ((x_12_1 * x_12_1 + x_12_2 * x_12_2) + u_12_1 * u_12_1) * 0.1) + ((x_13_1 * x_13_1 + x_13_2 * x_13_2) + u_13_1 * u_13_1) * 0.1) + ((x_14_1 * x_14_1 + x_14_2 * x_14_2) + u_14_1 * u_14_1) * 0.1) + ((x_15_1 * x_15_1 + x_15_2 * x_15_2) + u_15_1 * u_15_1) * 0.1) + ((x_16_1 * x_16_1 + x_16_2 * x_16_2) + u_16_1 * u_16_1) * 0.1) + ((x_17_1 * x_17_1 + x_17_2 * x_17_2) + u_17_1 * u_17_1) * 0.1) + ((x_18_1 * x_18_1 + x_18_2 * x_18_2) + u_18_1 * u_18_1) * 0.1) + ((x_19_1 * x_19_1 + x_19_2 * x_19_2) + u_19_1 * u_19_1) * 0.1) + ((x_20_1 * x_20_1 + x_20_2 * x_20_2) + u_20_1 * u_20_1) * 0.1) + ((x_21_1 * x_21_1 + x_21_2 * x_21_2) + u_21_1 * u_21_1) * 0.1) + ((x_22_1 * x_22_1 + x_22_2 * x_22_2) + u_22_1 * u_22_1) * 0.1) + ((x_23_1 * x_23_1 + x_23_2 * x_23_2) + u_23_1 * u_23_1) * 0.1) + ((x_24_1 * x_24_1 + x_24_2 * x_24_2) + u_24_1 * u_24_1) * 0.1) + ((x_25_1 * x_25_1 + x_25_2 * x_25_2) + u_25_1 * u_25_1) * 0.1) + ((x_26_1 * x_26_1 + x_26_2 * x_26_2) + u_26_1 * u_26_1) * 0.1) + ((x_27_1 * x_27_1 + x_27_2 * x_27_2) + u_27_1 * u_27_1) * 0.1) + ((x_28_1 * x_28_1 + x_28_2 * x_28_2) + u_28_1 * u_28_1) * 0.1) + ((x_29_1 * x_29_1 + x_29_2 * x_29_2) + u_29_1 * u_29_1) * 0.1) + ((x_30_1 * x_30_1 + x_30_2 * x_30_2) + u_30_1 * u_30_1) * 0.1) + ((x_31_1 * x_31_1 + x_31_2 * x_31_2) + u_31_1 * u_31_1) * 0.1) + ((x_32_1 * x_32_1 + x_32_2 * x_32_2) + u_32_1 * u_32_1) * 0.1) + ((x_33_1 * x_33_1 + x_33_2 * x_33_2) + u_33_1 * u_33_1) * 0.1) + ((x_34_1 * x_34_1 + x_34_2 * x_34_2) + u_34_1 * u_34_1) * 0.1) + ((x_35_1 * x_35_1 + x_35_2 * x_35_2) + u_35_1 * u_35_1) * 0.1) + ((x_36_1 * x_36_1 + x_36_2 * x_36_2) + u_36_1 * u_36_1) * 0.1) + ((x_37_1 * x_37_1 + x_37_2 * x_37_2) + u_37_1 * u_37_1) * 0.1) + ((x_38_1 * x_38_1 + x_38_2 * x_38_2) + u_38_1 * u_38_1) * 0.1) + ((x_39_1 * x_39_1 + x_39_2 * x_39_2) + u_39_1 * u_39_1) * 0.1) + ((x_40_1 * x_40_1 + x_40_2 * x_40_2) + u_40_1 * u_40_1) * 0.1) + ((x_41_1 * x_41_1 + x_41_2 * x_41_2) + u_41_1 * u_41_1) * 0.1) + ((x_42_1 * x_42_1 + x_42_2 * x_42_2) + u_42_1 * u_42_1) * 0.1) + ((x_43_1 * x_43_1 + x_43_2 * x_43_2) + u_43_1 * u_43_1) * 0.1) + ((x_44_1 * x_44_1 + x_44_2 * x_44_2) + u_44_1 * u_44_1) * 0.1) + ((x_45_1 * x_45_1 + x_45_2 * x_45_2) + u_45_1 * u_45_1) * 0.1) + ((x_46_1 * x_46_1 + x_46_2 * x_46_2) + u_46_1 * u_46_1) * 0.1) + ((x_47_1 * x_47_1 + x_47_2 * x_47_2) + u_47_1 * u_47_1) * 0.1) + ((x_48_1 * x_48_1 + x_48_2 * x_48_2) + u_48_1 * u_48_1) * 0.1) + ((x_49_1 * x_49_1 + x_49_2 * x_49_2) + u_49_1 * u_49_1) * 0.1) + ((x_50_1 * x_50_1 + x_50_2 * x_50_2) + u_50_1 * u_50_1) * 0.1)
# Create the NLP cost function
cost_func = C.SXFunction([z],[cost])
cost_func.init()
# Create the NLP constraints
constr_func = C.SXFunction([z],[constr])
constr_func.init()
# Create the IPOPT solver object
solver = C.IpoptSolver(cost_func,constr_func)
solver.init()
# Set initial guess and variable bounds
z_init = N.zeros(len(z))
z_ub = 1e20*N.ones(len(z))
z_lb = -1e20*N.ones(len(z))
solver.setInput(z_init,C.NLP_X_INIT)
solver.setInput(z_ub,C.NLP_UBX)
solver.setInput(z_lb,C.NLP_LBX)
# Set constratint bounds (equality constratins)
constr_ub = N.zeros(len(constr))
constr_lb = N.zeros(len(constr))
solver.setInput(constr_ub,C.NLP_UBG)
solver.setInput(constr_lb,C.NLP_LBG)
# Solve the problem
solver.solve()
# Extract the solution
z_opt = solver.output(C.NLP_X_OPT)
n_x = 2
n_w = 0
n_u = 1
n_e = 50
start_time = 0.
final_time = 5.
time = N.arange(start_time,final_time,(final_time-start_time)/n_e)
xx = N.zeros((n_e,n_x))
ww = N.zeros((n_e,n_w))
uu = N.zeros((n_e,n_u))
for i in range(n_x):
    xx[:,i] = N.array(z_opt[n_u + n_w + i::(n_x + n_u + n_w)])[:,0]
for i in range(n_w):
    ww[:,i] = N.array(z_opt[n_u + i::(n_x + n_u + n_w)])[:,0]
for i in range(n_u):
    uu[:,i] = N.array(z_opt[i::(n_x + n_u + n_w)])[:,0]
if n_x>0:
    plt.figure(1)
    plt.plot(time,xx)
    plt.grid(True)
    plt.show()
if n_w>0:
    plt.figure(2)
    plt.plot(time,ww)
    plt.grid(True)
    plt.show()
if n_u>0:
    plt.figure(3)
    plt.plot(time,uu)
    plt.grid(True)
    plt.show()
